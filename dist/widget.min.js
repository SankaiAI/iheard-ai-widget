(function(){'use strict';console.log('üöÄ iHeardAI Voice Agent Widget(Modular)Loading...');let modulesLoaded=false;let modulePromises=[];async function loadModules(){try{const currentScript=document.currentScript||document.querySelector('script[src*="widget.min.js"]')||document.querySelector('script[src*="widget.js"]')||Array.from(document.scripts).find(s=>s.src.includes('widget.min.js'))||Array.from(document.scripts).find(s=>s.src.includes('widget.js'));let baseUrl='';if(currentScript&&currentScript.src){const scriptUrl=new URL(currentScript.src);const cleanPath=scriptUrl.pathname.replace('/widget.js','').replace('/widget.min.js','');baseUrl=scriptUrl.origin+cleanPath;console.log('üîß Widget script detection:',{currentScript: currentScript.src,origin: scriptUrl.origin,pathname: scriptUrl.pathname,cleanPath: cleanPath,baseUrl: baseUrl});}else{console.error('‚ùå Could not detect widget script URL');baseUrl='https: console.log('üîß Using fallback baseUrl:',baseUrl);}const [ stylesModule,coreModule,voiceModule,uiModule,apiModule,utilsModule ]=await Promise.all([ import(`${baseUrl}/styles/index.js`),import(`${baseUrl}/core/index.js`),import(`${baseUrl}/voice/index.js`),import(`${baseUrl}/ui/index.js`),import(`${baseUrl}/api/index.js`),import(`${baseUrl}/utils/index.js`)]);window.iHeardModules={styles: stylesModule,core: coreModule,voice: voiceModule,ui: uiModule,api: apiModule,utils: utilsModule};modulesLoaded=true;console.log('‚úÖ All iHeardAI modules loaded successfully');return window.iHeardModules;}catch(error){console.error('‚ùå Failed to load iHeardAI modules:',error);throw new Error('Module loading failed: '+error.message);}}let livekitLoaded=false;function waitForLiveKit(){return new Promise((resolve,reject)=>{function getLiveKit(){return window.LiveKit||window.livekit||window.LiveKitClient||window.livekitClient||window.LivekitClient;}if(getLiveKit()){const livekit=getLiveKit();window.LiveKit=livekit;livekitLoaded=true;console.log('‚úÖ LiveKit client found and ready');resolve();return;}const checkInterval=setInterval(()=>{const livekit=getLiveKit();if(livekit){clearInterval(checkInterval);window.LiveKit=livekit;livekitLoaded=true;console.log('‚úÖ LiveKit client loaded and ready');resolve();}},100);setTimeout(()=>{clearInterval(checkInterval);console.error('‚ùå Available window objects:',Object.keys(window).filter(k=>k.toLowerCase().includes('live')));reject(new Error('LiveKit client failed to load within timeout'));},10000);});}if(typeof window.LiveKit==='undefined'){const script=document.createElement('script');script.src='https: script.async=true;script.onload=()=>{console.log('‚úÖ LiveKit client loaded successfully from modular widget');};script.onerror=()=>{console.error('‚ùå Failed to load LiveKit client library');};document.head.appendChild(script);}else{livekitLoaded=true;console.log('‚úÖ LiveKit client already available');}async function initializeWidget(){try{console.log('üîÑ Initializing modular widget...');const existingWidget=document.getElementById('iheard-ai-widget');if(existingWidget){console.log('üßπ Removing existing widget to prevent duplicates');existingWidget.remove();}const modules=await loadModules();if(!livekitLoaded){await waitForLiveKit();}await modules.core.initializeConfiguration();const widgetHTML=modules.ui.createWidgetHTML();const styles=modules.styles.createAllStyles();const widget=createWidgetElement(widgetHTML,styles);document.body.appendChild(widget);modules.ui.setupEventListeners(widget);modules.ui.setupWindowEventListeners();modules.ui.setupKeyboardEventListeners();if(modules.core.widgetConfig.voiceEnabled){await modules.voice.initializeVoiceSystem();}const agentId=modules.core.getAgentIdFromUrl();if(agentId){console.log('üîß Loading configuration for agent:',agentId);const configResult=await modules.api.loadAgentConfig(agentId);if(configResult==='recreate'){widget.remove();setTimeout(()=>initializeWidget(),100);return;}}modules.ui.updateWidgetAppearance(widget);if(widget&&widget.classList.contains('iheard-widget-container')){widget.classList.add('configured');console.log('‚ú® Widget configuration completed-showing widget');}if(agentId&&modules.core.widgetConfig.isActive){modules.api.startConfigPolling(agentId);}setTimeout(()=>{if(widget&&widget.classList.contains('iheard-widget-container')&&!widget.classList.contains('configured')){widget.classList.add('configured');console.log('‚è∞ Widget shown via fallback timeout');}},2000);console.log('‚úÖ iHeardAI Widget(Modular)initialized successfully');modules.utils.logInfo('Widget initialized',{agentId: agentId,voiceEnabled: modules.core.widgetConfig.voiceEnabled,chatEnabled: modules.core.widgetConfig.chatEnabled,modulesLoaded: Object.keys(modules)});}catch(error){console.error('‚ùå Widget initialization failed:',error);try{window.iHeardModules?.utils?.logError?.('Widget initialization failed',error,'Widget');}catch(logError){}showFallbackWidget(error.message);}}function createWidgetElement(widgetElement,styles){const styleElement=document.createElement('style');styleElement.textContent=styles;document.head.appendChild(styleElement);return widgetElement;}function showFallbackWidget(errorMsg){console.log('üîÑ Showing fallback widget...');const fallbackHTML=`<div class="iheard-widget-container" style=" position: fixed!important;bottom: 20px!important;right: 20px!important;z-index: 999999!important;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto',sans-serif!important;"><div class="iheard-widget-button" style=" width: 60px!important;height: 60px!important;border-radius: 50%!important;background: #ef4444!important;color: white!important;border: none!important;cursor: pointer!important;display: flex!important;align-items: center!important;justify-content: center!important;font-size: 24px!important;box-shadow: 0 4px 12px rgba(239,68,68,0.3)!important;">‚ö†Ô∏è</div><div class="error-message" style=" position: absolute!important;bottom: 70px!important;right: 0!important;background: white!important;border: 1px solid #e5e7eb!important;border-radius: 8px!important;padding: 12px!important;box-shadow: 0 4px 12px rgba(0,0,0,0.1)!important;max-width: 250px!important;font-size: 14px!important;color: #374151!important;display: none!important;"><div style="font-weight: bold;margin-bottom: 8px;">Widget Error</div><div>${errorMsg||'Failed to load widget modules'}</div><div style="margin-top: 8px;font-size: 12px;color: #6b7280;">Please refresh the page or contact support.</div></div></div>`;const fallbackWidget=document.createElement('div');fallbackWidget.id='iheard-ai-widget-fallback';fallbackWidget.innerHTML=fallbackHTML;const button=fallbackWidget.querySelector('.iheard-widget-button');const errorMsgElement=fallbackWidget.querySelector('.error-message');button.addEventListener('click',()=>{errorMsgElement.style.display=errorMsgElement.style.display==='none' ? 'block' : 'none';});document.body.appendChild(fallbackWidget);}function cleanup(){if(window.iHeardModules?.api?.stopConfigPolling){window.iHeardModules.api.stopConfigPolling();}if(window.iHeardModules?.voice?.disconnectFromLiveKit){window.iHeardModules.voice.disconnectFromLiveKit();}const widget=document.getElementById('iheard-ai-widget');const fallback=document.getElementById('iheard-ai-widget-fallback');if(widget)widget.remove();if(fallback)fallback.remove();if(window.iHeardModules?.utils?.storage){window.iHeardModules.utils.storage.clear();}console.log('üßπ Widget cleanup completed');}window.iHeardAI={init: initializeWidget,cleanup: cleanup,reload:()=>{cleanup();setTimeout(initializeWidget,100);},getModules:()=>window.iHeardModules,getConfig:()=>window.iHeardModules?.core?.widgetConfig,enableDebug:()=>window.iHeardModules?.utils?.enableDebugMode?.(),disableDebug:()=>window.iHeardModules?.utils?.disableDebugMode?.(),updateConfig:(newConfig)=>{if(window.iHeardModules?.core?.updateConfig){window.iHeardModules.core.updateConfig(newConfig);if(window.iHeardModules?.ui?.updateWidgetAppearance){const widget=document.getElementById('iheard-ai-widget');if(widget){window.iHeardModules.ui.updateWidgetAppearance(widget);console.log('‚úÖ Widget appearance updated successfully');}else{console.warn('‚ö†Ô∏è Widget element not found for appearance update');}}return true;}return false;},isInitialized:()=>{return!!(window.iHeardModules&&window.iHeardModules.core&&window.iHeardModules.ui&&document.getElementById('iheard-ai-widget'));}};window.iHeardAIWidget=window.iHeardAI;if(document.readyState==='loading'){document.addEventListener('DOMContentLoaded',initializeWidget);}else{initializeWidget();}window.addEventListener('beforeunload',cleanup);console.log('üéØ iHeardAI Widget(Modular)script loaded');})();